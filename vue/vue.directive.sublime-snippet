<snippet>
	<content><![CDATA[
// https://vuejs.org/v2/guide/custom-directive.html

export default {
    bind(el, binding, vnode) {
        // called only once, when the directive is first bound to the element. 
        // This is where you can do one-time setup work.
    },
    inserted(el, binding, vnode) {
        // called when the bound element has been inserted into its parent node 
        // (this only guarantees parent node presence, not necessarily in-document).
    },
    update(el, binding, vnode, oldVnode) {
        // called after the containing component’s VNode has updated,
        // but possibly before its children have updated. 
        // The directive’s value may or may not have changed, 
        // but you can skip unnecessary updates by comparing the binding’s current and old values
    },
    componentUpdated(el, binding, vnode, oldVnode) {
        // called after the containing component’s VNode and the VNodes of its children have updated.
    },
    unbind(el, binding, vnode) {
        // called only once, when the directive is unbound from the element.
    },
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>vuedirective</tabTrigger>
	<description>Vue directive boilerplate setup</description>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>text.html.vue, source.js</scope>
</snippet>
